{"version":3,"file":"component---src-pages-search-tsx-994263fe15bff2649866.js","mappings":"4PA4BA,IAAMA,GAAe,wPAoCrB,EArB2D,YAEvD,IACIC,EADL,EADDC,MAGA,OACEC,EAAAA,EAAAA,IAACH,EAAD,KACGC,EAASG,KACR,oBACEC,KACEC,EAFJ,EAEIA,GACUC,EAHd,EAGIC,OAAUD,KACVE,EAJJ,EAIIA,YAJJ,OAOEN,EAAAA,EAAAA,IAACO,EAAAA,GAAD,UAAcD,EAAd,CAA2BE,KAAMJ,EAAMK,IAAKN,IAR/C,IANP,ECvBMO,EAAS,SAACC,GACd,IA6BUC,EAAOC,EAETd,EA7BR,GAA0Be,EAAAA,EAAAA,UAAqB,CAC7CD,aAAe,GACfD,MAJiB,KAEZG,EAAP,KAAcC,EAAd,KAoCA,OACEhB,EAAAA,EAAAA,IAAAA,MAAAA,MACMA,EAAAA,EAAAA,IAAAA,QAAAA,CACEiB,KAAK,OACLC,YAAY,SACZ,aAAW,SACXC,SArCgB,SAACC,GACzB,IAAMR,EAAQQ,EAAMC,OAAOC,MAIrBT,GAHWF,EAATY,KACWC,kBAAkBC,OAAS,IAEEC,QAAO,SAACC,GACtD,MAAsCA,EAAKzB,KAAKI,YAAxCsB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,WACxB,OACGF,GACCA,EAAQG,cAAcC,SAASpB,EAAMmB,gBACtCF,GAASA,EAAME,cAAcC,SAASpB,EAAMmB,gBAC5CD,GAAcA,EAAWG,KAAK,IAAIF,cAAcC,SAASpB,EAAMmB,cAN1B,IAU1Cf,EAAS,CACPJ,MAAAA,EACAC,aAAAA,GAjBJ,IAuCKE,EAAMH,QACLZ,EAAAA,EAAAA,IAAAA,MAAAA,MAlBIY,EAAwBG,EAAxBH,MAAOC,EAAiBE,EAAjBF,cAETd,EADmBc,GA9BR,KA8BwBD,EACaC,EAAe,MAGnEb,EAAAA,EAAAA,IAACkC,EAAD,CAAgBnC,MAASA,MAnC/B,EAwDA,WAAgBY,GAAD,OACbX,EAAAA,EAAAA,IAACmC,EAAAA,GAAD,CACEvB,MAAK,aAwCLwB,OAAQ,SAACb,GAAD,OAAUvB,EAAAA,EAAAA,IAACU,GAAD,QAAQa,KAAMA,GAAUZ,GAAlC,GA1CZ,EClDA,EAvBgB,WAGf,OACKX,EAAAA,EAAAA,IAACqC,EAAAA,EAAD,CACAR,MAAO,QACPS,YAAa,cACbC,IAAK,GACLC,MAAO,KAEKxC,EAAAA,EAAAA,IAACU,EAAD,OACVV,EAAAA,EAAAA,IAAAA,MAAAA,CAAKyC,MACH,CACE,MAAU,OACV,OAAW,WAdvB,C","sources":["webpack://gatsby-starter-default/./src/components/Main/SearchPostList.tsx","webpack://gatsby-starter-default/./src/components/Main/Search.tsx","webpack://gatsby-starter-default/./src/pages/search.tsx"],"sourcesContent":["import styled from '@emotion/styled'\r\nimport PostItem from 'components/Main/PostItem'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport React, { FunctionComponent} from 'react'\r\n\r\nexport type PostType = {\r\n  node: {\r\n    id: string\r\n    frontmatter: {\r\n      title: string\r\n      summary: string\r\n      date: string\r\n      categories: string[]\r\n      thumbnail: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\ntype SearchListProps = {\r\n  posts: PostListItemType[]\r\n}\r\n\r\n\r\nconst PostListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 50px 0 100px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n    padding: 50px 20px;\r\n  }\r\n`\r\n\r\nconst SearchPostList: FunctionComponent<SearchListProps> = function ({\r\n  posts,\r\n}) {\r\n  const postList = posts;\r\n  return (\r\n    <PostListWrapper>\r\n      {postList.map(\r\n        ({\r\n          node: {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter,\r\n          },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} link={slug} key={id} />\r\n        ),\r\n      )}\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchPostList","import React, { useState } from \"react\";\r\nimport { graphql, StaticQuery } from \"gatsby\";\r\nimport SearchPostList from \"./SearchPostList\"\r\nimport { PostListItemType } from \"types/PostItem.types\";\r\n\r\nexport type SearchPageProps = {\r\n    location: {\r\n      search: string\r\n    }\r\n    data: {\r\n      allMarkdownRemark: {\r\n        edges: PostListItemType[]\r\n      }\r\n    }\r\n  }\r\n\r\ntype SearchMeta =  {\r\n    query : \"\",\r\n    filteredData : PostListItemType[]\r\n}\r\nconst Search = (props : SearchPageProps) => {\r\n  const emptyQuery = \"\";\r\n\r\n  const [state, setState] = useState<SearchMeta>({\r\n    filteredData : [],\r\n    query: emptyQuery,\r\n  });\r\n\r\n  const handleInputChange = (event : any) => {\r\n    const query = event.target.value;\r\n    const { data } = props;\r\n    const posts = data.allMarkdownRemark.edges || [];\r\n\r\n    const filteredData : PostListItemType[] = posts.filter((post : PostListItemType) => {\r\n      const { summary, title, categories} = post.node.frontmatter;\r\n      return (\r\n        (summary &&\r\n          summary.toLowerCase().includes(query.toLowerCase())) ||\r\n        (title && title.toLowerCase().includes(query.toLowerCase())) ||\r\n        (categories && categories.join(\"\").toLowerCase().includes(query.toLowerCase()))\r\n      );\r\n    });\r\n\r\n    setState({\r\n      query,\r\n      filteredData,\r\n    });\r\n  };\r\n\r\n  const renderSearchResults = () => {\r\n    const { query, filteredData } = state;\r\n    const hasSearchResults = filteredData && query !== emptyQuery;\r\n    const posts : PostListItemType[] = hasSearchResults ? filteredData : [];\r\n    return (\r\n      posts &&\r\n      <SearchPostList posts = {posts} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            onChange={handleInputChange}\r\n          />\r\n      {state.query && (\r\n        <div>\r\n          {renderSearchResults()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default (props : any) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n    query abc {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n        sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              summary\r\n              date(formatString: \"YYYY.MM.DD.\")\r\n              categories\r\n              thumbnail {\r\n                childImageSharp {\r\n                  gatsbyImageData(width: 768, height: 400)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      file(name: { eq: \"profile-image\" }) {\r\n        childImageSharp {\r\n          gatsbyImageData(width: 120, height: 120)\r\n        }\r\n        publicURL\r\n      }\r\n    }\r\n  `}\r\n    render={(data) => <Search data={data} {...props} />}\r\n  />\r\n);","import React from 'react'\r\nimport Template from 'components/Common/Template'\r\nimport Search from 'components/Main/Search'\r\nconst Contact = () => \r\n{\r\n\r\n return  (\r\n      <Template\r\n      title= \"About\"\r\n      description= \"About Hosan\"\r\n      url= \"\"\r\n      image= \"\"\r\n      >\r\n                  <Search />\r\n        <div style={\r\n          {\r\n            \"width\" : \"20px\",\r\n            \"height\" : \"200vh\"\r\n          }\r\n        }>\r\n        </div>\r\n      </ Template>\r\n  )\r\n\r\n}\r\n\r\nexport default Contact\r\n"],"names":["PostListWrapper","postList","posts","___EmotionJSX","map","node","id","slug","fields","frontmatter","PostItem","link","key","Search","props","query","filteredData","useState","state","setState","type","placeholder","onChange","event","target","value","data","allMarkdownRemark","edges","filter","post","summary","title","categories","toLowerCase","includes","join","SearchPostList","StaticQuery","render","Template","description","url","image","style"],"sourceRoot":""}