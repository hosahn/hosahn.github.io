{"version":3,"file":"component---src-pages-search-tsx-2cec4f59b79762b3c5c7.js","mappings":"iMAqEI,UAnCkD,YAYlD,IAXUA,EAWX,EAXDC,SAAYD,OAWX,IAVDE,KAUC,IATCC,KACEC,aAAgBC,EAQnB,EARmBA,MAAOC,EAQ1B,EAR0BA,YAAaC,EAQvC,EARuCA,QAEjBC,EAMtB,EANCC,kBAAqBD,MAMtB,IALCE,KACqBC,EAItB,EAJGC,gBAAmBD,gBACnBE,EAGH,EAHGA,UAMEC,EAA8BC,EAAAA,MAAkBf,GAChDgB,EACuB,iBAApBF,EAAOG,UAA0BH,EAAOG,SAE3CH,EAAOG,SADP,MAGF,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACEd,MAAOA,EACPC,YAAaA,EACbc,IAAKb,EACLc,MAAOR,IAELK,EAAAA,EAAAA,IAAAA,QAAAA,KAAAA,YACFA,EAAAA,EAAAA,IAACI,EAAAA,EAAD,CAAcC,aAAcZ,KAC5BO,EAAAA,EAAAA,IAACM,EAAAA,EAAD,CAAUR,iBAAkBA,EAAkBS,MAAOjB,IA9B/D,C","sources":["webpack://gatsby-starter-default/./src/pages/search.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react'\r\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList'\r\nimport Introduction from 'components/Main/Introduction'\r\nimport PostList, { PostType } from 'components/Main/PostList'\r\nimport { graphql } from 'gatsby'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport Template from 'components/Common/Template'\r\n\r\ntype IndexPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string\r\n        description: string\r\n        siteUrl: string\r\n      }\r\n    }\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n      publicURL: string\r\n    }\r\n  }\r\n}\r\n\r\nconst SearchPage: FunctionComponent<IndexPageProps> = function ({\r\n  location: { search },\r\n  data: {\r\n    site: {\r\n      siteMetadata: { title, description, siteUrl },\r\n    },\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n      publicURL,\r\n    },\r\n  },\r\n}) {\r\n\r\n\r\n  const parsed: ParsedQuery<string> = queryString.parse(search)\r\n  const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n      return (\r\n        <Template\r\n          title={title}\r\n          description={description}\r\n          url={siteUrl}\r\n          image={publicURL}\r\n        >\r\n            <input>post 검색</input>\r\n          <Introduction profileImage={gatsbyImageData} />\r\n          <PostList selectedCategory={selectedCategory} posts={edges} />\r\n        </Template>\r\n      )\r\n    }\r\n    \r\n    export default SearchPage;\r\n    \r\n    export const getPostList2 = graphql`\r\n      query getPostList2 {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            siteUrl\r\n          }\r\n        }\r\n        allMarkdownRemark(\r\n          sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n        ) {\r\n          edges {\r\n            node {\r\n              id\r\n              fields {\r\n                slug\r\n              }\r\n              frontmatter {\r\n                title\r\n                summary\r\n                date(formatString: \"YYYY.MM.DD.\")\r\n                categories\r\n                thumbnail {\r\n                  childImageSharp {\r\n                    gatsbyImageData(width: 768, height: 400)\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        file(name: { eq: \"profile-image\" }) {\r\n          childImageSharp {\r\n            gatsbyImageData(width: 120, height: 120)\r\n          }\r\n          publicURL\r\n        }\r\n      }\r\n    `;\r\n    "],"names":["search","location","data","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","file","gatsbyImageData","childImageSharp","publicURL","parsed","queryString","selectedCategory","category","___EmotionJSX","Template","url","image","Introduction","profileImage","PostList","posts"],"sourceRoot":""}