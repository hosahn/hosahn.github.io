{"version":3,"file":"component---src-pages-contact-tsx-83cf12d1c4a1bc01b494.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/store/store.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/index.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","webpack://gatsby-starter-default/./src/pages/contact.tsx","webpack://gatsby-starter-default/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Main/Introduction.tsx"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","\r\nimport Template from 'components/Common/Template'\r\nimport React, { FunctionComponent, useRef, useState } from \"react\";\r\nimport styled from '@emotion/styled'\r\nimport Introduction from 'components/Main/Introduction';\r\nimport { graphql } from 'gatsby';\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport emailjs from '@emailjs/browser';\r\n\r\nconst ABForm = styled.input`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: calc(1.5em + 0.75rem + 2px);\r\npadding: 0.375rem 0.75rem;\r\nfont-size: 1rem;\r\nfont-weight: 400;\r\nline-height: 1.5;\r\ncolor: #495057;\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder: 1px solid #ced4da;\r\noutline: none;\r\nborder-radius: 0.25rem;\r\ntransition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n&:focus {\r\n  border: 1px solid #313131;\r\n}\r\n`\r\n\r\n\r\nconst ABArea = styled.textarea`\r\nfont-size: 18px;\r\npadding: 10px;\r\nmargin: 10px;\r\ncolor :#495057\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder: 1px solid #ced4da;\r\noutline: none;\r\nwidth : 100%;\r\nheight : 500px\r\nborder-radius: 3px;\r\n::placeholder {\r\n  color: black;\r\n}\r\n&:focus {\r\n  border: 1px solid #313131;\r\n}\r\n`\r\n\r\nconst ABLabel = styled.label`\r\ndisplay: inline-block;\r\nmargin-bottom: 0.5rem;\r\n`\r\n\r\nconst SubBt = styled.button`\r\ndisplay: inline-block;\r\nfont-weight: 400;\r\ncolor: #212529;\r\ntext-align: center;\r\nvertical-align: middle;\r\ncursor: pointer;\r\n-webkit-user-select: none;\r\n-moz-user-select: none;\r\n-ms-user-select: none;\r\nuser-select: none;\r\nbackground-color: transparent;\r\nborder: 1px solid transparent black;\r\npadding: 0.375rem 0.75rem;\r\nfont-size: 1rem;\r\nline-height: 1.5;\r\nborder-radius: 0.25rem;\r\ntransition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n&:hover {\r\n  background-color: grey;\r\n}\r\n`\r\n\r\nconst ABDiv = styled.div`\r\nmargin-bottom: 1rem;\r\n`\r\n\r\nconst SEMDiv =  styled.div`\r\ndisplay:block;\r\nheight: auto;\r\n`\r\n\r\nconst FullDiv = styled.div`\r\nmargin: auto;\r\nmargin-top : 70px;\r\nfont-family: -apple-system, Arial, sans-serif;\r\nfont-size: 1rem;\r\nfont-weight: 400;\r\nline-height: 1.5;\r\ncolor: #212529;\r\ntext-align: left;\r\nbackground-color: #fff;\r\npadding: 30px;\r\npadding-bottom: 10px;\r\nborder: 1px solid #ced4da;\r\nborder-radius: 0.25rem;\r\nmax-width: 100%;\r\nwidth : 70%;\r\nheight: 80%;\r\n`\r\n\r\nconst INPUTGroup = styled.div`\r\nposition: relative;\r\ndisplay: -ms-flexbox;\r\ndisplay: flex;\r\n-ms-flex-wrap: wrap;\r\nflex-wrap: wrap;\r\n-ms-flex-align: stretch;\r\nalign-items: stretch;\r\nwidth: 100%;\r\n`\r\n\r\nconst H1 = styled.h1`\r\ntext-align : center\r\n`\r\n\r\n\r\ntype ContactPageProps = {\r\n  data: {\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ContactForm: FunctionComponent<ContactPageProps> = ({\r\n  data: {\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n    },\r\n  },\r\n}) => {\r\n  const form = useRef(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const emailHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault()\r\n    const element = e.currentTarget as HTMLInputElement\r\n    setEmail(element.value)\r\n\r\n  }\r\n  \r\n  const nameHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault()\r\n    const element = e.currentTarget as HTMLInputElement\r\n    setName(element.value)\r\n  }\r\n\r\n  const messageHandler = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n    e.preventDefault()\r\n    const element = e.currentTarget as HTMLTextAreaElement\r\n    setMessage(element.value)\r\n  }\r\n\r\n  const sendEmail = async (e:any) => {\r\n      e.preventDefault();\r\n      const serviceId : string = 'service_msuqzo9';\r\n      const templateId : string = 'template_tv2z1va';\r\n      const publicKey : string = 'Vyi75khtxAhxilOrs';\r\n      const templateParams :  Record<string, unknown>=  {\r\n        from_name : name,\r\n        from_email : email,\r\n        to_name: 'Hosan Lee',\r\n        message: message + email + name\r\n      };\r\n      emailjs.send(serviceId, templateId,templateParams, publicKey).then(() => {\r\n          alert('Email sent successfully! returning...')\r\n          setName('');\r\n          setEmail('');\r\n          setMessage('');\r\n          window.location.reload()\r\n      })\r\n      .catch(() => {\r\n        alert('Error sending email, please try again later');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Template title= \"Contact\"\r\n    description= \"Contact Hosan\"\r\n    url= \"https://hosahn.github.io/about\"\r\n    image= \"\">\r\n      <Introduction profileImage={gatsbyImageData} />\r\n      <H1>.</H1>\r\n      <H1>.</H1>        \r\n      <H1>.</H1>        \r\n      <H1>Do you have an interest in my work or have a question?</H1>    \r\n  \r\n      <FullDiv>\r\n        <SEMDiv>\r\n        <H1>Contact Me!</H1>    \r\n      <form ref={form} onSubmit={sendEmail}>\r\n        \r\n      <ABDiv>\r\n      <ABLabel>Name</ABLabel>\r\n      <INPUTGroup>\r\n      <ABForm type=\"text\" name=\"user_name\" onChange={(e) => nameHandler(e)} />\r\n      </INPUTGroup>\r\n      </ABDiv>\r\n      <ABDiv>      \r\n      <ABLabel>Email</ABLabel>\r\n      <INPUTGroup>     \r\n      <ABForm type=\"email\" name=\"user_email\" onChange={(e) => emailHandler(e)} />\r\n      </INPUTGroup>\r\n      </ABDiv>\r\n      <ABDiv>\r\n      <ABLabel>Message</ABLabel>\r\n      <INPUTGroup>\r\n      <ABArea name=\"message\" onChange={(e) => messageHandler(e)} />\r\n      </INPUTGroup>\r\n      <SubBt type=\"submit\">Send</SubBt>\r\n      </ABDiv>\r\n      Your personal information is not going to be saved in any form.\r\n    </form>\r\n    </SEMDiv>\r\n    </FullDiv>\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nexport const getAboutList = graphql`\r\nquery getImage {\r\n  file(name: { eq: \"profile-image\" }) {\r\n    childImageSharp {\r\n      gatsbyImageData(width: 120, height: 120)\r\n    }\r\n    publicURL\r\n  }\r\n}\r\n`;\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\n\r\ntype ProfileImageProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin-bottom: 30px;\r\n  border-radius: 50%;\r\n  @media (max-width: 768px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport ProfileImage from 'components/Main/ProfileImage'\r\n\r\ntype IntroductionProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  background-image: linear-gradient(60deg, #7490b5 0%, #7490b5 100%);\r\n  color: #ffffff;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  width: 768px;\r\n  height: 400px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 300px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  margin-top: 5px;\r\n  font-size: 35px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\n\r\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return (\r\n    <Background>\r\n      <Wrapper>\r\n        <ProfileImage profileImage={profileImage} />\r\n\r\n        <div>\r\n          <SubTitle>Sometimes we need solution, sometimes we need sleep</SubTitle>\r\n          <Title>Welcome to Hosan's Security Blog!</Title>\r\n        </div>\r\n      </Wrapper>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Introduction"],"names":["EmailJSResponseStatus","constructor","_status","_text","this","status","text","store","origin","blockHeadless","storageProvider","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","createWebStorage","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","length","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","Array","isArray","validateBlockListParams","name","FormData","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","id","validateLimitRateParams","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","templateParams","opts","blockList","limitRate","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","ABForm","_styled","target","styles","ABArea","ABLabel","SubBt","ABDiv","SEMDiv","FullDiv","INPUTGroup","H1","_ref","file","childImageSharp","gatsbyImageData","form","useRef","email","setEmail","useState","setName","setMessage","___EmotionJSX","Template","title","description","image","Introduction","profileImage","ref","onSubmit","e","preventDefault","emailjs","from_name","from_email","to_name","then","alert","window","reload","catch","type","onChange","element","currentTarget","nameHandler","emailHandler","messageHandler","ProfileImageWrapper","GatsbyImage","alt","Background","Wrapper","SubTitle","Title","ProfileImage"],"sourceRoot":""}