{"version":3,"file":"component---src-pages-contact-tsx-1591ec1a2e6f64f06a26.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/components/Main/Introduction.tsx","webpack://gatsby-starter-default/./node_modules/emailjs-com/es/store/store.js","webpack://gatsby-starter-default/./node_modules/emailjs-com/es/utils/validateParams.js","webpack://gatsby-starter-default/./node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","webpack://gatsby-starter-default/./node_modules/emailjs-com/es/api/sendPost.js","webpack://gatsby-starter-default/./node_modules/emailjs-com/es/index.js","webpack://gatsby-starter-default/./node_modules/emailjs-com/es/methods/sendForm/sendForm.js","webpack://gatsby-starter-default/./src/pages/contact.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image'\r\n\r\ntype ProfileImageProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin-bottom: 30px;\r\n  border-radius: 50%;\r\n  @media (max-width: 768px) {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />\r\n}\r\n\r\nexport default ProfileImage","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport ProfileImage from 'components/Main/ProfileImage'\r\n\r\ntype IntroductionProps = {\r\n  profileImage: IGatsbyImageData\r\n}\r\n\r\n\r\nconst Background = styled.div`\r\n  width: 100%;\r\n  background-image: linear-gradient(60deg, #7490b5 0%, #7490b5 100%);\r\n  color: #ffffff;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  width: 768px;\r\n  height: 400px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 300px;\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst SubTitle = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 15px;\r\n  }\r\n`\r\n\r\nconst Title = styled.div`\r\n  margin-top: 5px;\r\n  font-size: 35px;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 25px;\r\n  }\r\n`\r\n\r\n\r\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\r\n  profileImage,\r\n}) {\r\n  return (\r\n    <Background>\r\n      <Wrapper>\r\n        <ProfileImage profileImage={profileImage} />\r\n\r\n        <div>\r\n          <SubTitle>Sometimes we need solution, sometimes we need sleep</SubTitle>\r\n          <Title>Welcome to Hosan's Security Blog!</Title>\r\n        </div>\r\n      </Wrapper>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Introduction","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import axios from 'axios';\r\nimport Template from 'components/Common/Template'\r\nimport React, { FunctionComponent, useRef, useState } from \"react\";\r\nimport styled from '@emotion/styled'\r\nimport Introduction from 'components/Main/Introduction';\r\nimport { graphql } from 'gatsby';\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst ABForm = styled.input`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: calc(1.5em + 0.75rem + 2px);\r\npadding: 0.375rem 0.75rem;\r\nfont-size: 1rem;\r\nfont-weight: 400;\r\nline-height: 1.5;\r\ncolor: #495057;\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder: 1px solid #ced4da;\r\noutline: none;\r\nborder-radius: 0.25rem;\r\ntransition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n&:focus {\r\n  border: 1px solid #313131;\r\n}\r\n`\r\n\r\n\r\nconst ABArea = styled.textarea`\r\nfont-size: 18px;\r\npadding: 10px;\r\nmargin: 10px;\r\ncolor :#495057\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder: 1px solid #ced4da;\r\noutline: none;\r\nwidth : 100%;\r\nheight : 500px\r\nborder-radius: 3px;\r\n::placeholder {\r\n  color: black;\r\n}\r\n&:focus {\r\n  border: 1px solid #313131;\r\n}\r\n`\r\n\r\nconst ABLabel = styled.label`\r\ndisplay: inline-block;\r\nmargin-bottom: 0.5rem;\r\n`\r\n\r\nconst SubBt = styled.button`\r\ndisplay: inline-block;\r\nfont-weight: 400;\r\ncolor: #212529;\r\ntext-align: center;\r\nvertical-align: middle;\r\ncursor: pointer;\r\n-webkit-user-select: none;\r\n-moz-user-select: none;\r\n-ms-user-select: none;\r\nuser-select: none;\r\nbackground-color: transparent;\r\nborder: 1px solid transparent black;\r\npadding: 0.375rem 0.75rem;\r\nfont-size: 1rem;\r\nline-height: 1.5;\r\nborder-radius: 0.25rem;\r\ntransition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n&:hover {\r\n  background-color: grey;\r\n}\r\n`\r\n\r\nconst ABDiv = styled.div`\r\nmargin-bottom: 1rem;\r\n`\r\n\r\nconst SEMDiv =  styled.div`\r\ndisplay:block;\r\nheight: auto;\r\n`\r\n\r\nconst FullDiv = styled.div`\r\nmargin: auto;\r\nmargin-top : 70px;\r\nfont-family: -apple-system, Arial, sans-serif;\r\nfont-size: 1rem;\r\nfont-weight: 400;\r\nline-height: 1.5;\r\ncolor: #212529;\r\ntext-align: left;\r\nbackground-color: #fff;\r\npadding: 30px;\r\npadding-bottom: 10px;\r\nborder: 1px solid #ced4da;\r\nborder-radius: 0.25rem;\r\nmax-width: 100%;\r\nwidth : 70%;\r\nheight: 80%;\r\n`\r\n\r\nconst INPUTGroup = styled.div`\r\nposition: relative;\r\ndisplay: -ms-flexbox;\r\ndisplay: flex;\r\n-ms-flex-wrap: wrap;\r\nflex-wrap: wrap;\r\n-ms-flex-align: stretch;\r\nalign-items: stretch;\r\nwidth: 100%;\r\n`\r\n\r\nconst H1 = styled.h1`\r\ntext-align : center\r\n`\r\n\r\n\r\ntype ContactPageProps = {\r\n  data: {\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst ContactForm: FunctionComponent<ContactPageProps> = ({\r\n  data: {\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n    },\r\n  },\r\n}) => {\r\n  const form = useRef(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const headers = {\r\n    'Content-Type' : 'application/json',\r\n  }\r\n  const emailHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault()\r\n    const element = e.currentTarget as HTMLInputElement\r\n    setEmail(element.value)\r\n\r\n  }\r\n  \r\n  const nameHandler = (e: React.FormEvent<HTMLInputElement>) => {\r\n    e.preventDefault()\r\n    const element = e.currentTarget as HTMLInputElement\r\n    setName(element.value)\r\n  }\r\n\r\n  const messageHandler = (e: React.FormEvent<HTMLTextAreaElement>) => {\r\n    e.preventDefault()\r\n    const element = e.currentTarget as HTMLTextAreaElement\r\n    setMessage(element.value)\r\n  }\r\n\r\n  const sendEmail = async (e:any) => {\r\n      e.preventDefault();    //This is important, i'm not sure why, but the email won't send without it\r\n\r\n      emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID')\r\n        .then((_) => {\r\n            window.location.reload()  //This is if you still want the page to reload (since e.preventDefault() cancelled that behavior) \r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n  };\r\n\r\n  return (\r\n    <Template title= \"Contact\"\r\n    description= \"Contact Hosan\"\r\n    url= \"https://hosahn.github.io/about\"\r\n    image= \"\">\r\n      <Introduction profileImage={gatsbyImageData} />\r\n      <H1>.</H1>\r\n      <H1>.</H1>        \r\n      <H1>.</H1>        \r\n      <H1>Do you have an interest in my work?</H1>    \r\n  \r\n      <FullDiv>\r\n        <SEMDiv>\r\n        <H1>Contact Me!</H1>    \r\n      <form ref={form} onSubmit={sendEmail}>\r\n        \r\n      <ABDiv>\r\n      <ABLabel>Name</ABLabel>\r\n      <INPUTGroup>\r\n      <ABForm type=\"text\" name=\"user_name\" onChange={(e) => nameHandler(e)} />\r\n      </INPUTGroup>\r\n      </ABDiv>\r\n      <ABDiv>      \r\n      <ABLabel>Email</ABLabel>\r\n      <INPUTGroup>     \r\n      <ABForm type=\"email\" name=\"user_email\" onChange={(e) => emailHandler(e)} />\r\n      </INPUTGroup>\r\n      </ABDiv>\r\n      <ABDiv>\r\n      <ABLabel>Message</ABLabel>\r\n      <INPUTGroup>\r\n      <ABArea name=\"message\" onChange={(e) => messageHandler(e)} />\r\n      </INPUTGroup>\r\n      <SubBt type=\"submit\">Send</SubBt>\r\n      </ABDiv>\r\n      Your personal information is not going to be saved in any form.\r\n    </form>\r\n    </SEMDiv>\r\n    </FullDiv>\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nexport const getAboutList = graphql`\r\nquery getImage {\r\n  file(name: { eq: \"profile-image\" }) {\r\n    childImageSharp {\r\n      gatsbyImageData(width: 120, height: 120)\r\n    }\r\n    publicURL\r\n  }\r\n}\r\n`;\r\n"],"names":["ProfileImageWrapper","_styled","GatsbyImage","target","name","styles","_ref","profileImage","___EmotionJSX","image","alt","Background","Wrapper","SubTitle","Title","ProfileImage","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","ABForm","ABArea","ABLabel","SubBt","ABDiv","SEMDiv","FullDiv","INPUTGroup","H1","file","childImageSharp","gatsbyImageData","useRef","email","setEmail","useState","setName","message","setMessage","Template","title","description","Introduction","ref","onSubmit","async","e","preventDefault","emailjs","then","_","window","location","reload","error","console","log","type","onChange","element","currentTarget","value","nameHandler","emailHandler","messageHandler"],"sourceRoot":""}