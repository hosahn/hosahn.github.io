{"version":3,"file":"component---src-pages-search-tsx-1d86b3225930aec66451.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Main/SearchPostList.tsx","webpack://gatsby-starter-default/./src/components/Main/Search.tsx","webpack://gatsby-starter-default/./src/pages/search.tsx"],"sourcesContent":["import styled from '@emotion/styled'\r\nimport PostItem from 'components/Main/PostItem'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport React, { FunctionComponent} from 'react'\r\n\r\nexport type PostType = {\r\n  node: {\r\n    id: string\r\n    frontmatter: {\r\n      title: string\r\n      summary: string\r\n      date: string\r\n      categories: string[]\r\n      thumbnail: {\r\n        childImageSharp: {\r\n          gatsbyImageData: IGatsbyImageData\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport type SearchListProps = {\r\n  posts: PostListItemType[]\r\n}\r\n\r\n\r\nconst PostListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 20px;\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  padding: 50px 0 100px;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n    padding: 50px 20px;\r\n  }\r\n`\r\n\r\nconst SearchPostList: FunctionComponent<SearchListProps> = function ({\r\n  posts,\r\n}) {\r\n  const postList = posts;\r\n  return (\r\n    <PostListWrapper>\r\n      {postList.map(\r\n        ({\r\n          node: {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter,\r\n          },\r\n        }: PostListItemType) => (\r\n          <PostItem {...frontmatter} link={slug} key={id} />\r\n        ),\r\n      )}\r\n    </PostListWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchPostList","import React, { useState } from \"react\";\r\nimport { graphql, StaticQuery } from \"gatsby\";\r\nimport SearchPostList from \"./SearchPostList\"\r\nimport styled from \"@emotion/styled\";\r\nimport { PostListItemType } from \"types/PostItem.types\";\r\n\r\nexport type SearchPageProps = {\r\n    location: {\r\n      search: string\r\n    }\r\n    data: {\r\n      allMarkdownRemark: {\r\n        edges: PostListItemType[]\r\n      }\r\n    }\r\n  }\r\n\r\ntype SearchMeta =  {\r\n    query : \"\",\r\n    filteredData : PostListItemType[]\r\n}\r\n\r\nconst SEMDiv =  styled.div`\r\ndisplay:block;\r\nheight: auto;\r\n`\r\n\r\nconst FullDiv = styled.div`\r\nmargin: auto;\r\nmargin-top : 70px;\r\nfont-family: -apple-system, Arial, sans-serif;\r\nfont-size: 1rem;\r\nfont-weight: 400;\r\nline-height: 1.5;\r\ncolor: #212529;\r\ntext-align: left;\r\nbackground-color: #fff;\r\npadding: 30px;\r\npadding-bottom: 10px;\r\nborder: 1px solid #ced4da;\r\nborder-radius: 0.25rem;\r\nmax-width: 100%;\r\nwidth : 70%;\r\nheight: 80%;\r\n`\r\nconst INPUTGroup = styled.div`\r\nposition: relative;\r\ndisplay: -ms-flexbox;\r\ndisplay: flex;\r\n-ms-flex-wrap: wrap;\r\nflex-wrap: wrap;\r\n-ms-flex-align: stretch;\r\nalign-items: stretch;\r\nwidth: 100%;\r\n`\r\nconst ABForm = styled.input`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: calc(1.5em + 0.75rem + 2px);\r\npadding: 0.375rem 0.75rem;\r\nfont-size: 1rem;\r\nfont-weight: 400;\r\nline-height: 1.5;\r\ncolor: #495057;\r\nbackground-color: #fff;\r\nbackground-clip: padding-box;\r\nborder: 1px solid #ced4da;\r\noutline: none;\r\nborder-radius: 0.25rem;\r\ntransition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n&:focus {\r\n  border: 1px solid #313131;\r\n}\r\n`\r\n\r\nconst ABLabel = styled.label`\r\ndisplay: inline-block;\r\nmargin-bottom: 0.5rem;\r\n`\r\n\r\n\r\n\r\nconst Search = (props : SearchPageProps) => {\r\n  const emptyQuery = \"\";\r\n\r\n  const [state, setState] = useState<SearchMeta>({\r\n    filteredData : [],\r\n    query: emptyQuery,\r\n  });\r\n\r\n  const handleInputChange = (event : any) => {\r\n    const query = event.target.value;\r\n    const { data } = props;\r\n    const posts = data.allMarkdownRemark.edges || [];\r\n\r\n    const filteredData : PostListItemType[] = posts.filter((post : PostListItemType) => {\r\n      const { summary, title, categories} = post.node.frontmatter;\r\n      return (\r\n        (summary &&\r\n          summary.toLowerCase().includes(query.toLowerCase())) ||\r\n        (title && title.toLowerCase().includes(query.toLowerCase())) ||\r\n        (categories && categories.join(\"\").toLowerCase().includes(query.toLowerCase()))\r\n      );\r\n    });\r\n\r\n    setState({\r\n      query,\r\n      filteredData,\r\n    });\r\n  };\r\n\r\n  const renderSearchResults = () => {\r\n    const { query, filteredData } = state;\r\n    const hasSearchResults = filteredData && query !== emptyQuery;\r\n    const posts : PostListItemType[] = hasSearchResults ? filteredData : [];\r\n    return (\r\n      posts &&\r\n      <SearchPostList posts = {posts} />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <FullDiv>\r\n      <SEMDiv>\r\n        <INPUTGroup>\r\n          <ABLabel>Search Posts (title)</ABLabel>\r\n          <ABForm\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            onChange={handleInputChange}\r\n          />\r\n          </INPUTGroup>\r\n        </SEMDiv>\r\n</FullDiv>\r\n      {state.query && (\r\n        <div>\r\n          {renderSearchResults()}\r\n        </div>\r\n      )}\r\n</>\r\n  );\r\n};\r\n\r\nexport default (props : any) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n    query abc {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n      allMarkdownRemark(\r\n       sort: {frontmatter: {date: DESC} }  \r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              title\r\n              summary\r\n              date(formatString: \"YYYY.MM.DD.\")\r\n              categories\r\n              thumbnail {\r\n                childImageSharp {\r\n                  gatsbyImageData(width: 768, height: 400)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      file(name: { eq: \"profile-image\" }) {\r\n        childImageSharp {\r\n          gatsbyImageData(width: 120, height: 120)\r\n        }\r\n        publicURL\r\n      }\r\n    }\r\n  `}\r\n    render={(data) => <Search data={data} {...props} />}\r\n  />\r\n);","import React, { FunctionComponent } from 'react'\r\nimport Template from 'components/Common/Template'\r\nimport Search from 'components/Main/Search'\r\nimport Introduction from 'components/Main/Introduction'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport { graphql } from 'gatsby'\r\n\r\ntype SearchPageProps = {\r\n  data: {\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n      publicURL: string\r\n    }\r\n  }\r\n}\r\n\r\nconst Contact: FunctionComponent<SearchPageProps> = (\r\n  {\r\n    data: {\r\n      file: {\r\n        childImageSharp: { gatsbyImageData },\r\n      },\r\n    },\r\n  }\r\n) => \r\n{\r\n\r\n return  (\r\n      <Template\r\n      title= \"Search\"\r\n      description= \"Search Posts about algorithms, cyber security, backend ... and much more\"\r\n      url= \"https://hosahn.github.io/search\"\r\n      image= \"\"\r\n      >\r\n        <Introduction profileImage={gatsbyImageData} />  <Search />\r\n        <div style={\r\n          {\r\n            \"width\" : \"20px\",\r\n            \"height\" : \"200vh\"\r\n          }\r\n        }>\r\n        </div>\r\n      </ Template>\r\n  )\r\n\r\n}\r\n\r\nexport default Contact\r\n\r\nexport const getSearchList = graphql`\r\nquery getPostLists {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      description\r\n      siteUrl\r\n    }\r\n  }\r\n  allMarkdownRemark(\r\n   sort: {frontmatter: {date: DESC} }  \r\n  ) {\r\n    edges {\r\n      node {\r\n        id\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          title\r\n          summary\r\n          date(formatString: \"YYYY.MM.DD.\")\r\n          categories\r\n          thumbnail {\r\n            childImageSharp {\r\n              gatsbyImageData(width: 768, height: 400)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  file(name: { eq: \"profile-image\" }) {\r\n    childImageSharp {\r\n      gatsbyImageData(width: 120, height: 120)\r\n    }\r\n    publicURL\r\n  }\r\n}\r\n`;\r\n"],"names":["PostListWrapper","_styled","target","name","styles","_ref","posts","postList","___EmotionJSX","map","_ref2","node","id","fields","slug","frontmatter","PostItem","_extends","link","key","SEMDiv","FullDiv","INPUTGroup","ABForm","ABLabel","Search","props","state","setState","useState","filteredData","query","React","type","placeholder","onChange","event","value","data","allMarkdownRemark","edges","filter","post","summary","title","categories","toLowerCase","includes","join","renderSearchResults","SearchPostList","StaticQuery","render","file","childImageSharp","gatsbyImageData","Template","description","url","image","Introduction","profileImage","style"],"sourceRoot":""}